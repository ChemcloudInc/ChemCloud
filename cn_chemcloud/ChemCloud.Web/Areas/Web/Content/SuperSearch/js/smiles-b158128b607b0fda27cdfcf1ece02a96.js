/****************************************************************************
 * Copyright (C) 2009-2010 GGA Software Services LLC
 *
 * This file may be distributed and/or modified under the terms of the
 * GNU Affero General Public License version 3 as published by the Free
 * Software Foundation and appearing in the file LICENSE.GPL included in
 * the packaging of this file.
 *
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 ***************************************************************************/
if(!window.chem||!chem.Struct)throw new Error("Vec2 and Molecule should be defined first");chem.SmilesSaver=function(e){this.smiles="",this._written_atoms=new Array,this._written_components=0;if(Object.isUndefined(e)){if(Object.isUndefined(ui.render))throw new Error("Render object is undefined");this._render=ui.render}else this._render=e;this.ignore_errors=!1},chem.SmilesSaver._Atom=function(e){this.neighbours=new Array,this.aromatic=!1,this.lowercase=!1,this.chirality=0,this.branch_cnt=0,this.paren_written=!1,this.h_count=e,this.parent=-1},chem.SmilesSaver.prototype.saveMolecule=function(e,t){var n,r,i;Object.isUndefined(t)||(this.ignore_errors=t);if(e.sgroups.count()>0&&!this.ignore_errors)throw new Error("SMILES doesn't support s-groups");this.atoms=new Array(e.atoms.count()),e.atoms.each(function(e,t){this.atoms[e]=new chem.SmilesSaver._Atom(t.implicitH)},this);var s=["B","C","N","O","P","S","Se","As"];e.bonds.each(function(t,n){n.type==chem.Struct.BOND.TYPE.AROMATIC&&(this.atoms[n.begin].aromatic=!0,s.indexOf(e.atoms.get(n.begin).label)!=-1&&(this.atoms[n.begin].lowercase=!0),this.atoms[n.end].aromatic=!0,s.indexOf(e.atoms.get(n.end).label)!=-1&&(this.atoms[n.end].lowercase=!0)),this.atoms[n.begin].neighbours.push({aid:n.end,bid:t}),this.atoms[n.end].neighbours.push({aid:n.begin,bid:t})},this),this._touched_cistransbonds=0,this._markCisTrans(e);var o=chem.MolfileSaver.getComponents(e),u=o.reactants.concat(o.products),a=new chem.Dfs(e,this.atoms,u,o.reactants.length);a.walk(),this.atoms.each(function(e){e.neighbours.clear()},this);for(n=0;n<a.v_seq.length;n++){var f=a.v_seq[n],l=f.idx,c=f.parent_edge,h=f.parent_vertex;if(c>=0){var p=this.atoms[l],d=a.numOpeningCycles(c);for(r=0;r<d;r++)this.atoms[h].neighbours.push({aid:-1,bid:-1});if(a.edgeClosingCycle(c)){for(i=0;i<p.neighbours.length;i++)if(p.neighbours[i].aid==-1){p.neighbours[i].aid=h,p.neighbours[i].bid=c;break}if(i==p.neighbours.length)throw new Error("internal: can not put closing bond to its place")}else p.neighbours.push({aid:h,bid:c}),p.parent=h;this.atoms[h].neighbours.push({aid:l,bid:c})}}var v=new chem.Stereocenters(e,function(e){return this.atoms[e].neighbours},this);v.buildFromBonds(this.ignore_errors),v.each(function(e,t){var n=-1;t.pyramid[3]==-1&&(n=3);var s=new Array(4),o=0,u=this.atoms[e];if(u.parent!=-1)for(i=0;i<4;i++)if(t.pyramid[i]==u.parent){s[o++]=i;break}n!=-1&&(s[o++]=n);for(r=0;r!=u.neighbours.length;r++){if(u.neighbours[r].aid==u.parent)continue;for(i=0;i<4;i++)if(u.neighbours[r].aid==t.pyramid[i]){if(o>=4)throw new Error("internal: pyramid overflow");s[o++]=i;break}}if(o==4)o=s[0],s[0]=s[1],s[1]=s[2],s[2]=s[3],s[3]=o;else if(o!=3)throw new Error("cannot calculate chirality");chem.Stereocenters.isPyramidMappingRigid(s)?this.atoms[e].chirality=1:this.atoms[e].chirality=2},this);var m=new Array;m.push(0);var g=!0;for(n=0;n<a.v_seq.length;n++){f=a.v_seq[n],l=f.idx,c=f.parent_edge,h=f.parent_vertex;var y=!0;if(h>=0){a.numBranches(h)>1&&this.atoms[h].branch_cnt>0&&this.atoms[h].paren_written&&(this.smiles+=")"),d=a.numOpeningCycles(c);for(r=0;r<d;r++){for(i=1;i<m.length;i++)if(m[i]==-1)break;i==m.length?m.push(h):m[i]=h,this._writeCycleNumber(i)}if(h>=0){var b=a.numBranches(h);b>1&&this.atoms[h].branch_cnt<b-1&&(a.edgeClosingCycle(c)?this.atoms[h].paren_written=!1:(this.smiles+="(",this.atoms[h].paren_written=!0)),this.atoms[h].branch_cnt++;if(this.atoms[h].branch_cnt>b)throw new Error("unexpected branch")}var w=e.bonds.get(c),E=!0,S=0;w.type==chem.Struct.BOND.TYPE.SINGLE&&(S=this._calcBondDirection(e,c,h)),S==1&&l==w.end||S==2&&l==w.begin?this.smiles+="/":S==2&&l==w.end||S==1&&l==w.begin?this.smiles+="\\":w.type==chem.Struct.BOND.TYPE.ANY?this.smiles+="~":w.type==chem.Struct.BOND.TYPE.DOUBLE?this.smiles+="=":w.type==chem.Struct.BOND.TYPE.TRIPLE?this.smiles+="#":w.type==chem.Struct.BOND.TYPE.AROMATIC&&(!this.atoms[w.begin].lowercase||!this.atoms[w.end].lowercase)?this.smiles+=":":w.type==chem.Struct.BOND.TYPE.SINGLE&&this.atoms[w.begin].aromatic&&this.atoms[w.end].aromatic?this.smiles+="-":E=!1;if(a.edgeClosingCycle(c)){for(r=1;r<m.length;r++)if(m[r]==l)break;if(r==m.length)throw new Error("cycle number not found");this._writeCycleNumber(r),m[r]=-1,y=!1}}else g||(this.smiles+=this._written_components==a.nComponentsInReactants?">>":"."),g=!1,this._written_components++;y&&(this._writeAtom(e,l,this.atoms[l].aromatic,this.atoms[l].lowercase,this.atoms[l].chirality),this._written_atoms.push(f.idx))}return this.comma=!1,this._writeRadicals(e),this.comma&&(this.smiles+="|"),this.smiles},chem.SmilesSaver.prototype._writeCycleNumber=function(e){if(e>0&&e<10)this.smiles+=e;else if(e>=10&&e<100)this.smiles+="%"+e;else{if(!(e>=100&&e<1e3))throw new Error("bad cycle number: "+e);this.smiles+="%%"+e}},chem.SmilesSaver.prototype._writeAtom=function(e,t,n,r,i){var s=e.atoms.get(t),o,u=!1,a=-1,f=0;if(s.label=="A"){this.smiles+="*";return}if(s.label=="R"||s.label=="R#"){this.smiles+="[*]";return}this.atom_atom_mapping&&(f=atom_atom_mapping[t]),s.label!="C"&&s.label!="P"&&s.label!="N"&&s.label!="S"&&s.label!="O"&&s.label!="Cl"&&s.label!="F"&&s.label!="Br"&&s.label!="B"&&s.label!="I"&&(u=!0);if(s.explicitValence||s.radical!=0||i>0||n&&s.label!="C"&&s.label!="O"||n&&s.label=="C"&&this.atoms[t].neighbours.length<3&&this.atoms[t].h_count==0)a=this.atoms[t].h_count;if(i||s.charge!=0||s.isotope>0||a>=0||f>0)u=!0;u&&(a==-1&&(a=this.atoms[t].h_count),this.smiles+="["),s.isotope>0&&(this.smiles+=s.isotope),r?this.smiles+=s.label.toLowerCase():this.smiles+=s.label;if(i>0){i==1?this.smiles+="@":this.smiles+="@@";if(s.implicitH>1)throw new Error(s.implicitH+" implicit H near stereocenter")}s.label!="H"&&(a>1||a==0&&!u?this.smiles+="H"+a:a==1&&(this.smiles+="H")),s.charge>1?this.smiles+="+"+s.charge:s.charge<-1?this.smiles+=s.charge:s.charge==1?this.smiles+="+":s.charge==-1&&(this.smiles+="-"),f>0&&(this.smiles+=":"+f),u&&(this.smiles+="]")},chem.SmilesSaver.prototype._markCisTrans=function(e){this.cis_trans=new chem.CisTrans(e,function(e){return this.atoms[e].neighbours},this),this.cis_trans.build(),this._dbonds=new Array(e.bonds.count()),e.bonds.each(function(e){this._dbonds[e]={ctbond_beg:-1,ctbond_end:-1,saved:0}},this),this.cis_trans.each(function(t,n){var r=e.bonds.get(t);if(n.parity!=0&&!this._render.isBondInRing(t)){var i=this.atoms[r.begin].neighbours,s=this.atoms[r.end].neighbours,o=!0,u=!0;i.each(function(n){n.bid!=t&&e.bonds.get(n.bid).type==chem.Struct.BOND.TYPE.SINGLE&&(o=!1)},this),s.each(function(n){n.bid!=t&&e.bonds.get(n.bid).type==chem.Struct.BOND.TYPE.SINGLE&&(u=!1)},this);if(o||u)return;i.each(function(n){n.bid!=t&&(e.bonds.get(n.bid).begin==r.begin?this._dbonds[n.bid].ctbond_beg=t:this._dbonds[n.bid].ctbond_end=t)},this),s.each(function(n){n.bid!=t&&(e.bonds.get(n.bid).begin==r.end?this._dbonds[n.bid].ctbond_beg=t:this._dbonds[n.bid].ctbond_end=t)},this)}},this)},chem.SmilesSaver.prototype._updateSideBonds=function(e,t){var n=e.bonds.get(t),r=this.cis_trans.getSubstituents(t),i=this.cis_trans.getParity(t),s=[-1,-1,-1,-1];s[0]=e.findBondId(r[0],n.begin),r[1]!=-1&&(s[1]=e.findBondId(r[1],n.begin)),s[2]=e.findBondId(r[2],n.end),r[3]!=-1&&(s[3]=e.findBondId(r[3],n.end));var o=0,u=0,a=0,f=0;this._dbonds[s[0]].saved!=0&&(this._dbonds[s[0]].saved==1&&e.bonds.get(s[0]).begin==n.begin||this._dbonds[s[0]].saved==2&&e.bonds.get(s[0]).end==n.begin?o++:u++),s[1]!=-1&&this._dbonds[s[1]].saved!=0&&(this._dbonds[s[1]].saved==2&&e.bonds.get(s[1]).begin==n.begin||this._dbonds[s[1]].saved==1&&e.bonds.get(s[1]).end==n.begin?o++:u++),this._dbonds[s[2]].saved!=0&&(this._dbonds[s[2]].saved==1&&e.bonds.get(s[2]).begin==n.end||this._dbonds[s[2]].saved==2&&e.bonds.get(s[2]).end==n.end?a++:f++),s[3]!=-1&&this._dbonds[s[3]].saved!=0&&(this._dbonds[s[3]].saved==2&&e.bonds.get(s[3]).begin==n.end||this._dbonds[s[3]].saved==1&&e.bonds.get(s[3]).end==n.end?a++:f++),i==chem.CisTrans.PARITY.CIS?(o+=a,u+=f):(o+=f,u+=a);if(o>0&&u>0)throw new Error("incompatible cis-trans configuration");return o==0&&u==0?!1:(o>0&&(this._dbonds[s[0]].saved=e.bonds.get(s[0]).begin==n.begin?1:2,s[1]!=-1&&(this._dbonds[s[1]].saved=e.bonds.get(s[1]).begin==n.begin?2:1),this._dbonds[s[2]].saved=e.bonds.get(s[2]).begin==n.end==(i==chem.CisTrans.PARITY.CIS)?1:2,s[3]!=-1&&(this._dbonds[s[3]].saved=e.bonds.get(s[3]).begin==n.end==(i==chem.CisTrans.PARITY.CIS)?2:1)),u>0&&(this._dbonds[s[0]].saved=e.bonds.get(s[0]).begin==n.begin?2:1,s[1]!=-1&&(this._dbonds[s[1]].saved=e.bonds.get(s[1]).begin==n.begin?1:2),this._dbonds[s[2]].saved=e.bonds.get(s[2]).begin==n.end==(i==chem.CisTrans.PARITY.CIS)?2:1,s[3]!=-1&&(this._dbonds[s[3]].saved=e.bonds.get(s[3]).begin==n.end==(i==chem.CisTrans.PARITY.CIS)?1:2)),!0)},chem.SmilesSaver.prototype._calcBondDirection=function(e,t,n){var r;if(this._dbonds[t].ctbond_beg==-1&&this._dbonds[t].ctbond_end==-1)return 0;if(e.bonds.get(t).type!=chem.Struct.BOND.TYPE.SINGLE)throw new Error("internal: directed bond type "+e.bonds.get(t).type);for(;;){r=0,this.cis_trans.each(function(t,n){n.parity!=0&&!this._render.isBondInRing(t)&&this._updateSideBonds(e,t)&&r++},this);if(r==this._touched_cistransbonds)break;this._touched_cistransbonds=r}return this._dbonds[t].saved==0&&(n==e.bonds.get(t).begin?this._dbonds[t].saved=1:this._dbonds[t].saved=2),this._dbonds[t].saved},chem.SmilesSaver.prototype._writeRadicals=function(e){var t=new Array(this._written_atoms.length),n,r;for(n=0;n<this._written_atoms.size();n++){if(t[n])continue;var i=e.atoms.get(this._written_atoms[n]).radical;if(i==0)continue;this.comma?this.smiles+=",":(this.smiles+=" |",this.comma=!0),i==chem.Struct.ATOM.RADICAL.SINGLET?this.smiles+="^3:":i==chem.Struct.ATOM.RADICAL.DOUPLET?this.smiles+="^1:":this.smiles+="^4:",this.smiles+=n;for(r=n+1;r<this._written_atoms.length;r++)e.atoms.get(this._written_atoms[r]).radical==i&&(t[r]=!0,this.smiles+=","+r)}};