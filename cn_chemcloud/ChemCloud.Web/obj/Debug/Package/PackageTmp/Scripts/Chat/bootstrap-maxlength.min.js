!function (t) {
    "use strict"
    t.event.special.destroyed || (t.event.special.destroyed = { remove: function (t) { t.handler && t.handler() } }), t.fn.extend({
        maxlength: function (e, a) {
            function n(t) {
                var a = t.val()
                a = e.twoCharLinebreak ? a.replace(/\r(?!\n)|\n(?!\r)/g, "\r\n") : a.replace(RegExp("\r?\n", "g"), "\n")
                var n = 0
                return n = e.utf8 ? s(a) : a.length
            } function o(t, a) {
                var n = t.val(), o = 0
                e.twoCharLinebreak && (n = n.replace(/\r(?!\n)|\n(?!\r)/g, "\r\n"), "\n" === n.substr(n.length - 1) && n.length % 2 === 1 && (o = 1)), t.val(n.substr(0, a - o))
            } function s(t) {
                for (var e = 0, a = 0; a < t.length; a++) {
                    var n = t.charCodeAt(a)
                    128 > n ? e++ : e += n > 127 && 2048 > n ? 2 : 3
                } return e
            } function r(t, a, o) {
                var s = !0
                return !e.alwaysShow && o - n(t) > a && (s = !1), s
            } function i(t, e) {
                var a = e - n(t)
                return a
            } function l(t, e) { e.css({ display: "block" }), t.trigger("maxlength.shown") } function h(t, e) { e.css({ display: "none" }), t.trigger("maxlength.hidden") } function c(t, a) {
                var n = ""
                return e.message ? n = e.message.replace("%charsTyped%", a).replace("%charsRemaining%", t - a).replace("%charsTotal%", t) : (e.preText && (n += e.preText), n += e.showCharsTyped ? a : t - a, e.showMaxLength && (n += e.separator + t), e.postText && (n += e.postText)), n
            } function p(t, a, n, o) { o.html(c(n, n - t)), t > 0 ? r(a, e.threshold, n) ? l(a, o.removeClass(e.limitReachedClass).addClass(e.warningClass)) : h(a, o) : l(a, o.removeClass(e.warningClass).addClass(e.limitReachedClass)), e.allowOverMax && (0 > t ? a.addClass("overmax") : a.removeClass("overmax")) } function d(e) {
                var a = e[0]
                return t.extend({}, "function" == typeof a.getBoundingClientRect ? a.getBoundingClientRect() : { width: a.offsetWidth, height: a.offsetHeight }, e.offset())
            } function f(t, a) {
                var n = d(t), o = t.outerWidth(), s = a.outerWidth(), r = a.width(), i = a.height()
                switch (e.appendToParent && (n.top -= t.parent().offset().top, n.left -= t.parent().offset().left), e.placement) {
                    case "bottom": a.css({ top: n.top + n.height, left: n.left + n.width / 2 - r / 2 })
                        break
                    case "top": a.css({ top: n.top - i, left: n.left + n.width / 2 - r / 2 })
                        break
                    case "left": a.css({ top: n.top + n.height / 2 - i / 2, left: n.left - r })
                        break
                    case "right": a.css({ top: n.top + n.height / 2 - i / 2, left: n.left + n.width })
                        break
                    case "bottom-right": a.css({ top: n.top + n.height, left: n.left + n.width })
                        break
                    case "top-right": a.css({ top: n.top - i, left: n.left + o })
                        break
                    case "top-left": a.css({ top: n.top - i, left: n.left - s })
                        break
                    case "bottom-left": a.css({ top: n.top + t.outerHeight(), left: n.left - s })
                        break
                    case "centered-right": a.css({ top: n.top + i / 2, left: n.left + o - s - 3 })
                        break
                    case "bottom-right-inside": a.css({ top: n.top + n.height, left: n.left + n.width - s })
                        break
                    case "top-right-inside": a.css({ top: n.top - i, left: n.left + o - s })
                        break
                    case "top-left-inside": a.css({ top: n.top - i, left: n.left })
                        break
                    case "bottom-left-inside": a.css({ top: n.top + t.outerHeight(), left: n.left })
                }
            } function u(t) {
                var a = "maxlength"
                return e.allowOverMax && (a = "data-bs-mxl"), t.attr(a) || t.attr("size")
            } var g = t("body"), m = { showOnReady: !1, alwaysShow: !1, threshold: 10, warningClass: "label label-success", limitReachedClass: "label label-important label-danger", separator: " / ", preText: "", postText: "", showMaxLength: !0, placement: "bottom", showCharsTyped: !0, validate: !1, utf8: !1, appendToParent: !1, twoCharLinebreak: !0, allowOverMax: !1 }
            return t.isFunction(e) && !a && (a = e, e = {}), e = t.extend(m, e), this.each(function () {
                function a() {
                    var a = c(n, "0")
                    n = u(r), s || (s = t('<span class="bootstrap-maxlength"></span>').css({ display: "none", position: "absolute", whiteSpace: "nowrap", zIndex: 1099 }).html(a)), r.is("textarea") && (r.data("maxlenghtsizex", r.outerWidth()), r.data("maxlenghtsizey", r.outerHeight()), r.mouseup(function () { (r.outerWidth() !== r.data("maxlenghtsizex") || r.outerHeight() !== r.data("maxlenghtsizey")) && f(r, s), r.data("maxlenghtsizex", r.outerWidth()), r.data("maxlenghtsizey", r.outerHeight()) })), e.appendToParent ? (r.parent().append(s), r.parent().css("position", "relative")) : g.append(s)
                    var o = i(r, u(r))
                    p(o, r, n, s), f(r, s)
                } var n, s, r = t(this)
                t(window).resize(function () { s && f(r, s) }), e.allowOverMax && (t(this).attr("data-bs-mxl", t(this).attr("maxlength")), t(this).removeAttr("maxlength")), e.showOnReady ? r.ready(function () { a() }) : r.focus(function () { a() }), r.on("maxlength.reposition", function () { f(r, s) }), r.on("destroyed", function () { s && s.remove() }), r.on("blur", function () { s && !e.showOnReady && s.remove() }), r.on("input", function () {
                    var t = u(r), a = i(r, t), l = !0
                    return e.validate && 0 > a ? (o(r, t), l = !1) : p(a, r, n, s), ("bottom-right-inside" === e.placement || "top-right-inside" === e.placement) && f(r, s), l
                })
            })
        }
    })
}(jQuery)